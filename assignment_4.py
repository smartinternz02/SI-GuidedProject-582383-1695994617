# -*- coding: utf-8 -*-
"""Assignment 4

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rIpZNyffGD6mSy_wQDN1Q3bjovztxN0F
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
path='/content/drive/MyDrive/winequality-red.csv'
wine_data= pd.read_csv(path)

import matplotlib.pyplot as plt
import seaborn as sns

print(wine_data.describe())

correlation_matrix = wine_data.corr()
plt.figure(figsize=(10, 6))
sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm")
plt.title("Correlation Matrix")
plt.show()

plt.figure(figsize=(6, 4))
sns.countplot(x='quality', data=wine_data)
plt.title("Distribution of Wine Quality")
plt.show()

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

X = wine_data.drop(columns=['quality'])
y = wine_data['quality']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse:.2f}")
print(f"R-squared: {r2:.2f}")

random_observation = pd.DataFrame({
    'fixed acidity': [7.0],
    'volatile acidity': [0.4],
    'citric acid': [0.3],
    'residual sugar': [2.0],
    'chlorides': [0.065],
    'free sulfur dioxide': [15.0],
    'total sulfur dioxide': [40.0],
    'density': [0.995],
    'pH': [3.4],
    'sulphates': [0.6],
    'alcohol': [11.5]
})

predicted_quality = model.predict(random_observation)
print(f"Predicted Wine Quality: {predicted_quality[0]:.2f}")